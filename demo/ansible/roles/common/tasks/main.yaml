---
- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Ensure the 'automation' user exists
  become: true
  ansible.builtin.user:
    name: automation
    create_home: yes
    groups: wheel
    append: yes

- name: Ensure 'automation' user has sudo privileges
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^automation'
    line: 'automation ALL=(ALL) NOPASSWD:ALL'
    validate: 'visudo -cf %s'

- name: Check if 'ec2-user' SSH authorized_keys exists
  ansible.builtin.stat:
    path: '/home/ec2-user/.ssh/authorized_keys'
  register: ec2_user_ssh_keys

- name: Ensure '.ssh' directory exists for 'automation' user
  ansible.builtin.file:
    path: '/home/automation/.ssh'
    state: directory
    owner: automation
    group: automation
    mode: '0700'
  when: ec2_user_ssh_keys.stat.exists

- name: Copy SSH keys from 'ec2-user' to 'automation'
  ansible.builtin.copy:
    src: '/home/ec2-user/.ssh/authorized_keys'
    dest: '/home/automation/.ssh/authorized_keys'
    owner: automation
    group: automation
    mode: '0600'
    remote_src: yes
  when: ec2_user_ssh_keys.stat.exists

- name: Copy SSH keys from 'generic-vm' to 'automation/.ssh'
  ansible.builtin.copy:
    src: '/Users/asbiaaza/Documents/vm/generic-vm.pem'
    dest: '/home/automation/.ssh/generic-vm.pem'
    owner: automation
    group: automation
    mode: '0600'
